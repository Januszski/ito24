@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  /* --foreground-rgb: 0, 0, 0;
  --background-start-rgb: 214, 219, 220;
  --background-end-rgb: 255, 255, 255; */
}

/* @media (prefers-color-scheme: dark) {
  :root {
    --foreground-rgb: 255, 255, 255;
    --background-start-rgb: 0, 0, 0;
    --background-end-rgb: 0, 0, 0;
  }
} */

/* body {
  color: rgb(var(--foreground-rgb));
  background: linear-gradient(
      to bottom,
      transparent,
      rgb(var(--background-end-rgb))
    )
    rgb(var(--background-start-rgb));
} */
/* 
@layer utilities {
  .text-balance {
    text-wrap: balance;
  }
} */

.metal-border {
  border: 10px solid transparent; /* Set border width */
  background-image: url("../public/metal1.jpeg"); /* Set the metal texture image */
  background-origin: border-box; /* Set the background origin to the border box */
  background-clip: padding-box; /* Clip background to padding box */
  padding: 10px; /* Add padding if needed */
  display: inline-block; /* Make sure the border surrounds the content */
}

@font-face {
  font-family: "CustomFont";
  src: url("/Rowdies-Light.ttf") format("truetype");
  /* You can also specify font-weight and font-style here if needed */
}

@font-face {
  font-family: "CustomFont2";
  src: url("/Skranji-Regular.ttf") format("truetype");
  /* You can also specify font-weight and font-style here if needed */
}
/* Apply the custom font to specific elements */
.writing-font {
  font-family: "CustomFont2", sans-serif;
}

@font-face {
  font-family: "CustomFont3";
  src: url("/WalterTurncoat-Regular.ttf") format("truetype");
  /* You can also specify font-weight and font-style here if needed */
}
/* Apply the custom font to specific elements */
.writing-font2 {
  font-family: "CustomFont3", sans-serif;
}

@font-face {
  font-family: "CustomFont3";
  src: url("/SeymourOne-Regular.ttf") format("truetype");
  /* You can also specify font-weight and font-style here if needed */
}
/* Apply the custom font to specific elements */
.writing-font3 {
  font-family: "CustomFont3", sans-serif;
}

@font-face {
  font-family: "CustomFont4";
  src: url("/Snippet-Regular.ttf") format("truetype");
  /* You can also specify font-weight and font-style here if needed */
}
/* Apply the custom font to specific elements */
.writing-font4 {
  font-family: "CustomFont4", sans-serif;
}

@font-face {
  font-family: "CustomFont5";
  src: url("/BebasNeue-Regular.ttf") format("truetype");
  /* You can also specify font-weight and font-style here if needed */
}
/* Apply the custom font to specific elements */
.writing-font5 {
  font-family: "CustomFont5", sans-serif;
}

/* html,
body {
  width: 100%;
  height: 100%;
}

body {
  background: linear-gradient(-45deg, #ee7752, #e73c7e, #23a6d5, #23d5ab);
  background-size: 400% 400%;
  animation: gradient 15s ease infinite;
}

@keyframes gradient {
  0% {
    background-position: 0% 50%;
  }
  50% {
    background-position: 100% 50%;
  }
  100% {
    background-position: 0% 50%;
  }
} */

body {
  margin: auto;
  font-family: -apple-system, BlinkMacSystemFont, sans-serif;
  overflow: auto;
  background: linear-gradient(
    315deg,
    rgb(64, 131, 67) 3%,
    rgb(132, 143, 153) 38%
  );
  animation: gradient 15s ease infinite;
  background-size: 400% 400%;
  background-attachment: fixed;
}

@keyframes gradient {
  0% {
    background-position: 0% 0%;
  }
  50% {
    background-position: 100% 100%;
  }
  100% {
    background-position: 0% 0%;
  }
}

.wave {
  background: rgb(255 255 255 / 25%);
  border-radius: 1000% 1000% 0 0;
  position: fixed;
  width: 200%;
  height: 12em;
  animation: wave 10s -3s linear infinite;
  transform: translate3d(0, 0, 0);
  opacity: 0.8;
  bottom: 0;
  left: 0;
  z-index: -1;
}

.wave:nth-of-type(2) {
  bottom: -1.25em;
  animation: wave 18s linear reverse infinite;
  opacity: 0.8;
}

.wave:nth-of-type(3) {
  bottom: -2.5em;
  animation: wave 20s -1s reverse infinite;
  opacity: 0.9;
}

@keyframes wave {
  2% {
    transform: translateX(1);
  }

  25% {
    transform: translateX(-25%);
  }

  50% {
    transform: translateX(-50%);
  }

  75% {
    transform: translateX(-25%);
  }

  100% {
    transform: translateX(1);
  }
}
